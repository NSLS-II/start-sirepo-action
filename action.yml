name: 'start-sirepo'
description: 'Start Sirepo with pre-defined simulations'
inputs:
  image-tag:
    description: 'Sirepo Docker image tag to use'
    required: false
    default: '20220806.215448'
  docker-binary:
    description: 'Docker binary (docker or podman)'
    required: false
    default: 'docker'
runs:
  using: "composite"
  steps:
    - name: Optionally clone Sirepo-Bluesky repo and get example files
      shell: bash -l {0}
      run: |
        # For reference: https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html.
        set -vxeuo pipefail
        if [ -d "${GITHUB_WORKSPACE}/sirepo_bluesky/tests/SIREPO_SRDB_ROOT" ]; then
            # In Sirepo-Bluesky repo.
            SIREPO_SRDB_ROOT="${GITHUB_WORKSPACE}/sirepo_bluesky/tests/SIREPO_SRDB_ROOT"
        else
            # In other repos.
            where_to_clone="/tmp/sirepo-bluesky"
            git clone --depth=1 https://github.com/NSLS-II/sirepo-bluesky.git ${where_to_clone}
            SIREPO_SRDB_ROOT="${where_to_clone}/sirepo_bluesky/tests/SIREPO_SRDB_ROOT"
        fi
        cp -Rv ${SIREPO_SRDB_ROOT} SIREPO_SRDB_ROOT

    - name: Install Podman
      if: inputs.docker-binary == 'podman'
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        sudo apt-get -y update
        sudo apt-get -y install podman

    - name: Set up env vars
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        export DOCKER_IMAGE_TAG=${{ inputs.image-tag }}
        echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG}" >> $GITHUB_ENV

        export DOCKER_BINARY=${{ inputs.docker-binary }}
        echo "DOCKER_BINARY=${DOCKER_BINARY}" >> $GITHUB_ENV

    - name: Start Sirepo Docker container
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        . start_sirepo.sh -d
        export SIREPO_DOCKER_CONTAINER_ID
        echo "SIREPO_DOCKER_CONTAINER_ID=${SIREPO_DOCKER_CONTAINER_ID}" >> $GITHUB_ENV

    - name: Check Sirepo state
      shell: bash -l {0}
      run: |
        set -vxeuo pipefail
        # Sleeping to allow sirepo time to start up
        sleep 10
        ${DOCKER_BINARY} images
        ${DOCKER_BINARY} ps -a
        container=$(${DOCKER_BINARY} ps -q -f id=${SIREPO_DOCKER_CONTAINER_ID})
        ${DOCKER_BINARY} logs ${SIREPO_DOCKER_CONTAINER_ID}
        if [ -z "${container}" ]; then
            echo "Container ID ${SIREPO_DOCKER_CONTAINER_ID} is not running. Exiting."
            exit 1
        fi
